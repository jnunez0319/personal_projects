{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7563141,"sourceType":"datasetVersion","datasetId":4403839}],"dockerImageVersionId":30664,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-03-18T21:28:55.369803Z","iopub.execute_input":"2024-03-18T21:28:55.370886Z","iopub.status.idle":"2024-03-18T21:28:55.390637Z","shell.execute_reply.started":"2024-03-18T21:28:55.370838Z","shell.execute_reply":"2024-03-18T21:28:55.389086Z"},"trusted":true},"execution_count":43,"outputs":[{"name":"stdout","text":"/kaggle/input/emotions/text.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"# Libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\nfrom sklearn.naive_bayes import MultinomialNB # Naive Bayes via Scikit-Learn\nfrom sklearn.feature_extraction.text import TfidfVectorizer # to convert text to numerical features\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report","metadata":{"execution":{"iopub.status.busy":"2024-03-18T21:28:55.393782Z","iopub.execute_input":"2024-03-18T21:28:55.394286Z","iopub.status.idle":"2024-03-18T21:28:55.401231Z","shell.execute_reply.started":"2024-03-18T21:28:55.394244Z","shell.execute_reply":"2024-03-18T21:28:55.399768Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"code","source":"# Open Dataset\ndata = pd.read_csv('/kaggle/input/emotions/text.csv')\ndata.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-03-18T21:28:55.403469Z","iopub.execute_input":"2024-03-18T21:28:55.403931Z","iopub.status.idle":"2024-03-18T21:28:56.307732Z","shell.execute_reply.started":"2024-03-18T21:28:55.403891Z","shell.execute_reply":"2024-03-18T21:28:56.306487Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0                                               text  label\n0           0      i just feel really helpless and heavy hearted      4\n1           1  ive enjoyed being able to slouch about relax a...      0\n2           2  i gave up my internship with the dmrg and am f...      4\n3           3                         i dont know i feel so lost      0\n4           4  i am a kindergarten teacher and i am thoroughl...      4","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>text</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>i just feel really helpless and heavy hearted</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>ive enjoyed being able to slouch about relax a...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>i gave up my internship with the dmrg and am f...</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>i dont know i feel so lost</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>i am a kindergarten teacher and i am thoroughl...</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Model Building\ntfidf_vectorizer = TfidfVectorizer(max_features=1000)\nX = tfidf_vectorizer.fit_transform(data['text'])\ny = data['label']","metadata":{"execution":{"iopub.status.busy":"2024-03-18T21:28:56.310259Z","iopub.execute_input":"2024-03-18T21:28:56.310615Z","iopub.status.idle":"2024-03-18T21:29:07.783701Z","shell.execute_reply.started":"2024-03-18T21:28:56.310586Z","shell.execute_reply":"2024-03-18T21:29:07.782544Z"},"trusted":true},"execution_count":46,"outputs":[]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=36)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-03-18T21:29:07.784976Z","iopub.execute_input":"2024-03-18T21:29:07.785313Z","iopub.status.idle":"2024-03-18T21:29:07.873267Z","shell.execute_reply.started":"2024-03-18T21:29:07.785286Z","shell.execute_reply":"2024-03-18T21:29:07.872117Z"},"trusted":true},"execution_count":47,"outputs":[{"name":"stdout","text":"(333447, 1000) (83362, 1000) (333447,) (83362,)\n","output_type":"stream"}]},{"cell_type":"code","source":"model = MultinomialNB(alpha=0.2)\nmodel.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-03-18T21:29:07.874677Z","iopub.execute_input":"2024-03-18T21:29:07.875024Z","iopub.status.idle":"2024-03-18T21:29:07.997883Z","shell.execute_reply.started":"2024-03-18T21:29:07.874995Z","shell.execute_reply":"2024-03-18T21:29:07.996730Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"MultinomialNB(alpha=0.2)","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB(alpha=0.2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB(alpha=0.2)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = model.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)\nprint(\"Classification Report:\")\nprint(classification_report(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-03-18T21:29:07.999244Z","iopub.execute_input":"2024-03-18T21:29:07.999574Z","iopub.status.idle":"2024-03-18T21:29:08.196323Z","shell.execute_reply.started":"2024-03-18T21:29:07.999547Z","shell.execute_reply":"2024-03-18T21:29:08.195153Z"},"trusted":true},"execution_count":49,"outputs":[{"name":"stdout","text":"Accuracy: 0.815851347136585\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.83      0.92      0.88     24328\n           1       0.75      0.96      0.84     28187\n           2       0.96      0.43      0.59      6929\n           3       0.93      0.71      0.80     11425\n           4       0.88      0.66      0.76      9553\n           5       0.96      0.32      0.48      2940\n\n    accuracy                           0.82     83362\n   macro avg       0.89      0.67      0.72     83362\nweighted avg       0.84      0.82      0.80     83362\n\n","output_type":"stream"}]}]}